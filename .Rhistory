list.files()
x <- 5
x
5
x <- 5+6
x
x <- 4:6
x
mean
name
name <- Kevin
name <- "Kevin"
name
name <- "Kevin" #keying my name
name
name <-
sdfsdfsdfs
name <-
k
name <-
"sdsdsfdsa"
nam
name
x <-
343141312
x
x <-
sfsdf
x
name
print(x)
print(name)
print(k)
scan(x)
scan(name)
Inf/Inf
Inf/1
1/Inf
100/Ing
100/Inf
0/0
class(pi)
x <- c(1:5,NA)
x
is.na(x)
x <- c(TRUE,123L)
x
x <- c(123,"K")
x
x <- c(123,"TRUE")
x
x[1]
x[1.1]
x[1.2]
x[2]
x[2.1]
x[2,1]
x[2.11]
x[2.1111]
x[2.0]
x[2]
x[-1]
x[1]
x[-2]
x[-3]
x[3]
x
x[-4]
2[0]
as.character(x)
as.character(123)
x<-1:3
as.Ch
as.ch
as.character(x)
as.numeric("k")
as.numeric("123")
as.numeric("x")
as.numeric(x)
x[1]
x[2]
x[0]
x[5]
x[3]
x[-2]
mylist <- list("sdsdf","srrf","3",324232,TRUE)
mylist
class(mylist)
class(mylist[1])
class(mylist[2])
x <- matrix(1:10,1,5)
x
?read.table
ls()
save.image("tutorial.RData")
q()
libaray
library(swirl)
ls()
rm(list=())
rm(list=ls())
ls()
library(swirl)
ls()
swirl()
swirl()
5+7
x <- 5+7
x\
x
y <- x-3
y
q()
age <- 18
age
age >= 10
age <= 10
print('hello world')
print('RStudio is nice')
a <- 2
a
v <- c(1,2,3)
v
getwd()
setwd(C:/Users/acer/Desktop/BootCamp_RStudio)
setwd(C:Users/acer/Desktop/BootCamp_RStudio)
setwd(C:/Users/acer/Desktop/BootCamp_RStudio)
setwd(C://Users/acer/Desktop/BootCamp_RStudio)
setwd(C: Users/acer/Desktop/BootCamp_RStudio)
setwd(C:使用者/acer/Desktop/BootCamp_RStudio)
setwd(C:\使用者/acer/Desktop/BootCamp_RStudio)
setwd(C:User/acer/Desktop/BootCamp_RStudio)
setwd(C:Users/acer/Desktop/BootCamp_RStudio)
setwd(C:/Users/acer/Desktop/BootCamp_RStudio)
source('C:/Users/acer/Desktop/RTime.R')
x <- matrix(c(3600, 5000, 12000, NA, 1000, 2000, 600, 7500, 1800, 9000,
3600, 4500, 10000, 8500, 3000, 10000, 1000, NA, 1200, 10000,
3800, 5500, 9000, 6000, 6600, 3000, 9600, 6500, 8200, 8000,
5000, 6600, 13000, 4500, 5000, NA, 10600, 9500, 7600, 6000,
6600, 8000, 17000, 3000, 7000, 1000, 12600, 8500, 6000, NA),5,10, byrow = TRUE)
apply(x,1, median, na.rm = T)
apply(x,2, median, na.rm = T)
arg <- c("median", "max", "min")
mod <- c(1,2)
for(i in mod){
for(argg in arg){
print(apply(x,i, argg, na.rm = T))
}
}
x <- matrix(c(3600, 5000, 12000, NA, 1000, 2000, 600, 7500, 1800, 9000,
3600, 4500, 10000, 8500, 3000, 10000, 1000, NA, 1200, 10000,
3800, 5500, 9000, 6000, 6600, 3000, 9600, 6500, 8200, 8000,
5000, 6600, 13000, 4500, 5000, NA, 10600, 9500, 7600, 6000,
6600, 8000, 17000, 3000, 7000, 1000, 12600, 8500, 6000, NA),5,10, byrow = TRUE)
arg <- c("median", "max", "min")
mod <- c(1,2)
for(i in mod){
for(argg in arg){
print(apply(x,i, argg, na.rm = T))
}
}
hanoi <- function(n, A, B, C) {
ifelse(n == 1, return(A, C), return(hanoi(n-1, A, C, B) + hanoi(1, A, B, C) + hanoi(n-1, B, A, C)))
}
num <- 20
for(m in hanoi(num, 'A', 'B', 'C')){
print("盤由 %s 移至 %s", m)
}
hanoi <- function(n, A, B, C) {
ifelse(n == 1, return(c(A, C)), return(hanoi(n-1, A, C, B) + hanoi(1, A, B, C) + hanoi(n-1, B, A, C)))
}
num <- 20
for(m in hanoi(num, 'A', 'B', 'C')){
print("盤由 %s 移至 %s", m)
}
hanoi <- function(n, A, B, C) {
ifelse(n == 1, return(c(A, C)), return(hanoi(n-1, A, C, B) + hanoi(1, A, B, C) + hanoi(n-1, B, A, C)))
}
hanoi(10,'A', 'B', 'C')
hanoi <- function(n, A, B, C) {
ifelse(n == 1, return(c(A, C)), return(paste(hanoi(n-1, A, C, B),hanoi(1, A, B, C),hanoi(n-1, B, A, C))))
}
hanoi(10,'A', 'B', 'C')
hanoi(3,'A', 'B', 'C')
for(m in hanoi(num, 'A', 'B', 'C')){
print("盤由 %s 移至 %s", m[1],m[2])
}
num <- 3
for(m in hanoi(num, 'A', 'B', 'C')){
print("盤由 %s 移至 %s", m[1],m[2])
}
m
hanoi(3,'A', 'B', 'C')
hanoi <- function(n, A, B, C) {
if(n == 1){
return(c(A, C))
} else {
hanoi(n-1, A, C, B)
hanoi(1, A, B, C)
hanoi(n-1, B, A, C)
}
}
hanoi(3,'A', 'B', 'C')
hanoi(4,'A', 'B', 'C')
hanoi <- function(n, A, B, C) {
if(n == 1){
return(c(A, C))
}else {
hanoi(n-1, A, C, B)
hanoi(1, A, B, C)
hanoi(n-1, B, A, C)
}
}
hanoi(4,'A', 'B', 'C')
hanoi(1,'A', 'B', 'C')
hanoi(2,'A', 'B', 'C')
hanoi(3,'A', 'B', 'C')
hanoi <- function(n, A, B, C) {
if(n == 1){
return(c(A, C))
}else {
return(c(hanoi(n-1, A, C, B), hanoi(1, A, B, C), hanoi(n-1, B, A, C)))
}
}
hanoi(3,'A', 'B', 'C')
hanoi(2,'A', 'B', 'C')
length(hanoi(3,'A', 'B', 'C'))
length(hanoi(3,'A', 'B', 'C'))/2
m <- hanoi(1, A, B, C)
m <- hanoi(1, 'A', 'B', 'C')
m
m[1]
m[2]
num <- 3
for(m in hanoi(num, 'A', 'B', 'C')){
print("盤由 %s 移至 %s", m[1],m[2])
}
for(m in hanoi(num, 'A', 'B', 'C')){
sprintf("盤由 %s 移至 %s", m[1],m[2])
}
num <- 3
for(m in hanoi(num, 'A', 'B', 'C')){
sprintf("盤由 %s 移至 %s", m[1],m[2])
}
for(m in hanoi(num, 'A', 'B', 'C')){
sprintf("盤由 %s 移至 %s", m)
}
for(m in hanoi(num, 'A', 'B', 'C')){
sprintf("盤由 %s 移至 %s", m[1],m[2])
}
m in hanoi(num, 'A', 'B', 'C')
for(m in c(hanoi(num, 'A', 'B', 'C'))){
sprintf("盤由 %s 移至 %s", m[1],m[2])
}
m in c(hanoi(num, 'A', 'B', 'C'))
c(hanoi(num, 'A', 'B', 'C'))
for(m in 1:length(hanoi(3,'A', 'B', 'C'))/2){
sprintf("盤由 %s 移至 %s", c(hanoi(3,'A', 'B', 'C'))[m])
}
for(m in 1:length(hanoi(3,'A', 'B', 'C'))/2){
sprintf("盤由 %s 移至 %s", c(hanoi(3,'A', 'B', 'C'))[m], c(hanoi(3,'A', 'B', 'C'))[m])
}
for(m in 1:length(hanoi(3,'A', 'B', 'C'))/2){
a <- sprintf("盤由 %s 移至 %s", c(hanoi(3,'A', 'B', 'C'))[m], c(hanoi(3,'A', 'B', 'C'))[m])
}
a
for(m in 1:length(hanoi(3,'A', 'B', 'C'))/2){
a <- sprintf("盤由 %s 移至 %s", c(hanoi(3,'A', 'B', 'C'))[(2*(m-1))+1], c(hanoi(3,'A', 'B', 'C'))[2*m])
}
a
for(m in 1:length(hanoi(3,'A', 'B', 'C'))/2){
sprintf("圓盤由 %s 移至 %s", c(hanoi(3,'A', 'B', 'C'))[(2*(m-1))+1], c(hanoi(3,'A', 'B', 'C'))[2*m])
}
for(m in 1:length(hanoi(3,'A', 'B', 'C'))/2){
printf("圓盤由 %s 移至 %s", c(hanoi(3,'A', 'B', 'C'))[(2*(m-1))+1], c(hanoi(3,'A', 'B', 'C'))[2*m])
}
for(m in 1:length(hanoi(3,'A', 'B', 'C'))/2){
print("圓盤由 %s 移至 %s", c(hanoi(3,'A', 'B', 'C'))[(2*(m-1))+1], c(hanoi(3,'A', 'B', 'C'))[2*m])
}
for(m in 1:length(hanoi(3,'A', 'B', 'C'))/2){
sprint("圓盤由 %s 移至 %s", c(hanoi(3,'A', 'B', 'C'))[(2*(m-1))+1], c(hanoi(3,'A', 'B', 'C'))[2*m])
}
?sprintf
sprintf("%s %d", "test", 1:3)
for(m in 1:(length(hanoi(3,'A', 'B', 'C'))/2)){
sprintf("圓盤由 %s 移至 %s", c(hanoi(3,'A', 'B', 'C'))[(2*(m-1))+1], c(hanoi(3,'A', 'B', 'C'))[2*m])
}
(length(hanoi(3,'A', 'B', 'C'))/2)
m
num <- 3
for(m in 1:(length(hanoi(3,'A', 'B', 'C'))/2)){
sprintf("圓盤由 %s 移至 %s", c(hanoi(3,'A', 'B', 'C'))[(2*(m-1))+1], c(hanoi(3,'A', 'B', 'C'))[2*m])
}
for(m in 1:(length(hanoi(3,'A', 'B', 'C'))/2)){
return(sprintf("圓盤由 %s 移至 %s", c(hanoi(3,'A', 'B', 'C'))[(2*(m-1))+1], c(hanoi(3,'A', 'B', 'C'))[2*m]))
}
sprintf("precision %.*f, width '%*.3f'", 3, pi, 8, pi)
num <- 3
for(m in 1:(length(hanoi(num,'A', 'B', 'C'))/2)){
sprintf("圓盤由 %s 移至 %s", c(hanoi(num,'A', 'B', 'C'))[(2*(m-1))+1], c(hanoi(num,'A', 'B', 'C'))[2*m])
}
hanoi <- function(n, A, B, C) {
if(n == 1){
return(length(c(A, C)/2))
}else {
return(hanoi(n-1, A, C, B) + hanoi(1, A, B, C) + hanoi(n-1, B, A, C))
}
}
hanoi(3,'A', 'B', 'C')
hanoi()
hanoi(3,'A', 'B', 'C')
hanoi <- function(n, A, B, C) {
if(n == 1){
return(length(c(A, C))/2)
}else {
return(hanoi(n-1, A, C, B) + hanoi(1, A, B, C) + hanoi(n-1, B, A, C))
}
}
hanoi(3,'A', 'B', 'C')
hanoi(20, 'A', 'B', 'C')
2^20-1
setwd("c:/Users/acer/Desktop/R統計HW/")
sei <- read.csv("seizure.csv")
Seizure1 <- read.csv('seizure.csv')
Seizure2 <- read.table("seizure.txt")
lm.obj <- lm(Seizure1$y ~ Seizure1$trt + Seizure1$age + Seizure1$ltime)
lm.obj
A <- matrix(c(2,-1,1,4,-1,3,2,3,2),3,3, byrow = T)
b <- c(3,2,1)
A
b
A <- matrix(c(2,-1,1,4,-1,3,2,3,2),3,3, byrow = T)
b <- c(3,2,1)
solve(A,b)
A <- matrix(c(2,-1,1,4,-1,3,2,-3,2),3,3, byrow = T)
b <- c(3,2,1)
solve(A,b)
A
A <- matrix(c(2,-1,1,4,-4,3,2,-3,2),3,3, byrow = T)
b <- c(3,2,1)
solve(A,b)
A <- matrix(c(2,-1,1,4,-4,3,2,-3,2),3,3, byrow = T)
b <- c(3,2,1)
solve(A,b)
A
b
A <- matrix(c(2,-1,1,4,-4,3,2,-3,2),3,3, byrow = T)
b <- c(3,2,1)
solve(A,b)
A <- matrix(c(2,-1,1,4,-4,3,2,-3,2),3,3, byrow = T)
b <- c(3,2,1)
solve(A,b)
A <- matrix(c(2,-1,1,4,-1,3,2,-3,2),3,3, byrow = T)
b <- c(3,2,1)
solve(A,b)
A <- matrix(c(3,5,-1,2,-1,3,4,2,-3),3,3, byrow = T)
b <- c(10 , 9 ,-1)
solve(A,b)
source('C:/Users/acer/Desktop/R統計HW/HW4/HW4.R')
diag(10)

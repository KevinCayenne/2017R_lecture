getwd()
getwd()
getwd()
library(knitr)
opts_knit$set(root.dir = "C:/Users/acer/Desktop/R統計HW")
print(getwd())
print(getwd())
sessionInfo()
opts_knit$set(root.dir = "c:/Users/acer/Desktop/R統計HW")
print(getwd())
knitr::opts_knit$set(root.dir = "C:/Users/acer/Desktop/PROS/Data/fMRI_PilotData")
getwd()
library(knitr)
knitr::opts_knit$set(root.dir = "C:/Users/acer/Desktop/PROS/Data/fMRI_PilotData")
getwd()
knitr::opts_knit$set(root.dir = "C:/Users/acer/Desktop/PROS/Data/fMRI_PilotData")
knitr::opts_knit$set(root.dir = "C:/Users/acer/Desktop/PROS/Data/fMRI_PilotData")
knitr::opts_knit$set(root.dir = "../fMRI_PilotData/")
getwd()
getwd()
File.list <- mixedsort(list.files("behaviorD"))
combined = paste("./behaviorD/", File.list, sep="")
library(knitr)
opts_knit$set(root.dir = "../fMRI_PilotData/")
getwd()
library(ggplot2)
library(ggpubr)
library(gtools)
library(gridExtra)
getwd()
knitr::opts_knit$set(root.dir = "C:/Users/acer/Desktop/PROS/Data/fMRI_PilotData")
getwd()
require(knitr)
opts_knit$set(root.dir = "c:/Users/acer/Desktop/R統計HW")
print(getwd())
getwd()
seizure <- read.csv("seizure.csv")
newton <- function(f3, x0, tol = 1e-9, n.max = 100) {
x <- x0
f3.x <- f3(x)
n <- 0
while ((max(abs(f3.x[[1]])) > tol) & (n < n.max)) {
x <- x - solve(f3.x[[2]]) %*% f3.x[[1]]
f3.x <- f3(x)
n <- n + 1
}
if (n == n.max) {
cat('newton failed to converge\n')
} else {
return(x)
}
}
f6 <- function(betacoef) {
Y <- seizure$y
X <- cbind(rep(1,length(Y)),seizure$trt,seizure$age)
u <- exp(X %*% betacoef) * seizure$ltime
gradient <-  t(X) %*% (Y-u)
hessian <- -t(X) %*% diag(c(u),length(Y)) %*% X
logLikelihood <- sum(-u+Y*log(u)-log(factorial(Y)))
return(list(gradient, hessian, logLikelihood))
}
newton(f6,c(0,0,0))
MLE <- newton(f6,c(0,0,0))
glm(seizure$y~seizure$trt + seizure$age ,offset = log(seizure$ltime),family=poisson)
f6(MLE)[[1]]
solve(-f6(MLE)[[2]])
vcov(mm)
MLE <- newton(f6,c(0,0,0))
mm <- glm(seizure$y~seizure$trt + seizure$age ,offset = log(seizure$ltime),family=poisson)
MLE <- newton(f6,c(0,0,0))
mm <- glm(seizure$y~seizure$trt + seizure$age ,offset = log(seizure$ltime),family=poisson)
MLE <- newton(f6,c(0,0,0))
mm <- glm(seizure$y~seizure$trt + seizure$age ,offset = log(seizure$ltime),family=poisson)
mm
vcov(mm)
f6(MLE)[[3]]
logLik(mm)
seizure <- read.csv("seizure.csv")
newton <- function(f3, x0, tol = 1e-9, n.max = 100) {
x <- x0
f3.x <- f3(x)
n <- 0
while ((max(abs(f3.x[[1]])) > tol) & (n < n.max)) {
x <- x - solve(f3.x[[2]]) %*% f3.x[[1]]
f3.x <- f3(x)
n <- n + 1
}
if (n == n.max) {
cat('newton failed to converge\n')
} else {
return(x)
}
}
f6 <- function(betacoef) {
Y <- seizure$y
X <- cbind(rep(1,length(Y)),seizure$trt,seizure$age)
u <- exp(X %*% betacoef) * seizure$ltime
gradient <-  t(X) %*% (Y-u)
hessian <- -t(X) %*% diag(c(u),length(Y)) %*% X
logLikelihood <- sum(-u+Y*log(u)-log(factorial(Y)))
return(list(gradient, hessian, logLikelihood))
}
newton(f6,c(0,0,0))
MLE <- newton(f6,c(0,0,0))
mm <- glm(seizure$y~seizure$trt + seizure$age ,offset = log(seizure$ltime),family=poisson)
mm
f6(MLE)[[1]]
solve(-f6(MLE)[[2]])
vcov(mm)
f6(MLE)[[3]]
logLik(mm)
getwd()
knitr::opts_knit$set(root.dir = "C:/Users/acer/Desktop/PROS/Data/fMRI_PilotData")
getwd()
library(knitr)
knitr::opts_knit$set(root.dir = "C:/Users/acer/Desktop/PROS/Data/fMRI_PilotData")
getwd()
library(ggplot2)
library(ggpubr)
library(gtools)
library(gridExtra)
getwd()
File.list <- mixedsort(list.files("behaviorD"))
getwd()
getwd()
library(knitr)
knitr::opts_knit$set(root.dir = "C:/Users/acer/Desktop/PROS/Data/fMRI_PilotData")
getwd()
library(ggplot2)
library(ggpubr)
library(gtools)
library(gridExtra)
getwd()
File.list <- mixedsort(list.files("behaviorD"))
seizure <- read.csv("seizure.csv")
newton <- function(f3, x0, tol = 1e-9, n.max = 100) {
x <- x0
f3.x <- f3(x)
n <- 0
while ((max(abs(f3.x[[1]])) > tol) & (n < n.max)) {
x <- x - solve(f3.x[[2]]) %*% f3.x[[1]]
f3.x <- f3(x)
n <- n + 1
}
if (n == n.max) {
cat('newton failed to converge\n')
} else {
return(x)
}
}
f6 <- function(betacoef) {
Y <- seizure$y
X <- cbind(rep(1,length(Y)),seizure$trt,seizure$age)
u <- exp(X %*% betacoef) * seizure$ltime
gradient <-  t(X) %*% (Y-u)
hessian <- -t(X) %*% diag(c(u),length(Y)) %*% X
logLikelihood <- sum(-u+Y*log(u)-log(factorial(Y)))
return(list(gradient, hessian, logLikelihood))
}
newton(f6,c(0,0,0))
MLE <- newton(f6,c(0,0,0))
mm <- glm(seizure$y~seizure$trt + seizure$age ,offset = log(seizure$ltime),family=poisson)
mm
f6(MLE)[[1]]
solve(-f6(MLE)[[2]])
vcov(mm)
f6(MLE)[[3]]
logLik(mm)
knitr::opts_knit$set(root.dir = "C:/Users/acer/Desktop/R統計HW/")
library(knitr)
knitr::opts_knit$set(root.dir = "C:/Users/acer/Desktop/R統計HW/")
getwd()
seizure <- read.csv("seizure.csv")
newton <- function(f3, x0, tol = 1e-9, n.max = 100) {
x <- x0
f3.x <- f3(x)
n <- 0
while ((max(abs(f3.x[[1]])) > tol) & (n < n.max)) {
x <- x - solve(f3.x[[2]]) %*% f3.x[[1]]
f3.x <- f3(x)
n <- n + 1
}
if (n == n.max) {
cat('newton failed to converge\n')
} else {
return(x)
}
}
f6 <- function(betacoef) {
Y <- seizure$y
X <- cbind(rep(1,length(Y)),seizure$trt,seizure$age)
u <- exp(X %*% betacoef) * seizure$ltime
gradient <-  t(X) %*% (Y-u)
hessian <- -t(X) %*% diag(c(u),length(Y)) %*% X
logLikelihood <- sum(-u+Y*log(u)-log(factorial(Y)))
return(list(gradient, hessian, logLikelihood))
}
newton(f6,c(0,0,0))
MLE <- newton(f6,c(0,0,0))
mm <- glm(seizure$y~seizure$trt + seizure$age ,offset = log(seizure$ltime),family=poisson)
mm
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/acer/Desktop/R統計HW/"))
getwd()
library(knitr)
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/acer/Desktop/R統計HW/"))
getwd()
seizure <- read.csv("seizure.csv")
newton <- function(f3, x0, tol = 1e-9, n.max = 100) {
x <- x0
f3.x <- f3(x)
n <- 0
while ((max(abs(f3.x[[1]])) > tol) & (n < n.max)) {
x <- x - solve(f3.x[[2]]) %*% f3.x[[1]]
f3.x <- f3(x)
n <- n + 1
}
if (n == n.max) {
cat('newton failed to converge\n')
} else {
return(x)
}
}
f6 <- function(betacoef) {
Y <- seizure$y
X <- cbind(rep(1,length(Y)),seizure$trt,seizure$age)
u <- exp(X %*% betacoef) * seizure$ltime
gradient <-  t(X) %*% (Y-u)
hessian <- -t(X) %*% diag(c(u),length(Y)) %*% X
logLikelihood <- sum(-u+Y*log(u)-log(factorial(Y)))
return(list(gradient, hessian, logLikelihood))
}
ls()
newton(f6,c(0,0,0))
MLE <- newton(f6,c(0,0,0))
mm <- glm(seizure$y~seizure$trt + seizure$age ,offset = log(seizure$ltime),family=poisson)
mm
library(knitr)
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/acer/Desktop/R統計HW/"))
getwd()
seizure <- read.csv("seizure.csv")
newton <- function(f3, x0, tol = 1e-9, n.max = 100) {
x <- x0
f3.x <- f3(x)
n <- 0
while ((max(abs(f3.x[[1]])) > tol) & (n < n.max)) {
x <- x - solve(f3.x[[2]]) %*% f3.x[[1]]
f3.x <- f3(x)
n <- n + 1
}
if (n == n.max) {
cat('newton failed to converge\n')
} else {
return(x)
}
}
f6 <- function(betacoef) {
Y <- seizure$y
X <- cbind(rep(1,length(Y)),seizure$trt,seizure$age)
u <- exp(X %*% betacoef) * seizure$ltime
gradient <-  t(X) %*% (Y-u)
hessian <- -t(X) %*% diag(c(u),length(Y)) %*% X
logLikelihood <- sum(-u+Y*log(u)-log(factorial(Y)))
return(list(gradient, hessian, logLikelihood))
}
newton(f6,c(0,0,0))
MLE <- newton(f6,c(0,0,0))
mm <- glm(seizure$y~seizure$trt + seizure$age ,offset = log(seizure$ltime),family=poisson)
mm
f6(MLE)[[1]]
solve(-f6(MLE)[[2]])
vcov(mm)
f6(MLE)[[3]]
logLik(mm)
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/acer/Desktop/R統計HW"))
getwd()
library(knitr)
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/acer/Desktop/R統計HW/"))
getwd()
seizure <- read.csv("seizure.csv")
getwd()
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/acer/Desktop/R統計HW"))
getwd()
library(knitr)
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/acer/Desktop/R統計HW"))
setwd("C:/Users/acer/Desktop/R統計HW")
getwd()
seizure <- read.csv("seizure.csv")
newton <- function(f3, x0, tol = 1e-9, n.max = 100) {
x <- x0
f3.x <- f3(x)
n <- 0
while ((max(abs(f3.x[[1]])) > tol) & (n < n.max)) {
x <- x - solve(f3.x[[2]]) %*% f3.x[[1]]
f3.x <- f3(x)
n <- n + 1
}
if (n == n.max) {
cat('newton failed to converge\n')
} else {
return(x)
}
}
f6 <- function(betacoef) {
Y <- seizure$y
X <- cbind(rep(1,length(Y)),seizure$trt,seizure$age)
u <- exp(X %*% betacoef) * seizure$ltime
gradient <-  t(X) %*% (Y-u)
hessian <- -t(X) %*% diag(c(u),length(Y)) %*% X
logLikelihood <- sum(-u+Y*log(u)-log(factorial(Y)))
return(list(gradient, hessian, logLikelihood))
}
newton(f6,c(0,0,0))
library(knitr)
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/acer/Desktop/R統計HW"))
setwd("C:/Users/acer/Desktop/R統計HW")
getwd()
seizure <- read.csv("seizure.csv")
newton <- function(f3, x0, tol = 1e-9, n.max = 100) {
x <- x0
f3.x <- f3(x)
n <- 0
while ((max(abs(f3.x[[1]])) > tol) & (n < n.max)) {
x <- x - solve(f3.x[[2]]) %*% f3.x[[1]]
f3.x <- f3(x)
n <- n + 1
}
if (n == n.max) {
cat('newton failed to converge\n')
} else {
return(x)
}
}
f6 <- function(betacoef) {
Y <- seizure$y
X <- cbind(rep(1,length(Y)),seizure$trt,seizure$age)
u <- exp(X %*% betacoef) * seizure$ltime
gradient <-  t(X) %*% (Y-u)
hessian <- -t(X) %*% diag(c(u),length(Y)) %*% X
logLikelihood <- sum(-u+Y*log(u)-log(factorial(Y)))
return(list(gradient, hessian, logLikelihood))
}
newton(f6,c(0,0,0))
MLE <- newton(f6,c(0,0,0))
mm <- glm(seizure$y~seizure$trt + seizure$age ,offset = log(seizure$ltime),family=poisson)
mm
f6(MLE)[[1]]
solve(-f6(MLE)[[2]])
vcov(mm)
f6(MLE)[[3]]
logLik(mm)
library(knitr)
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/acer/Desktop/R統計HW"))
setwd("C:/Users/acer/Desktop/R統計HW")
getwd()
seizure <- read.csv("seizure.csv")
newton <- function(f3, x0, tol = 1e-9, n.max = 100) {
x <- x0
f3.x <- f3(x)
n <- 0
while ((max(abs(f3.x[[1]])) > tol) & (n < n.max)) {
x <- x - solve(f3.x[[2]]) %*% f3.x[[1]]
f3.x <- f3(x)
n <- n + 1
}
if (n == n.max) {
cat('newton failed to converge\n')
} else {
return(x)
}
}
f6 <- function(betacoef) {
Y <- seizure$y
X <- cbind(rep(1,length(Y)),seizure$trt,seizure$age)
u <- exp(X %*% betacoef) * seizure$ltime
gradient <-  t(X) %*% (Y-u)
hessian <- -t(X) %*% diag(c(u),length(Y)) %*% X
logLikelihood <- sum(-u+Y*log(u)-log(factorial(Y)))
return(list(gradient, hessian, logLikelihood))
}
newton(f6,c(0,0,0))
MLE <- newton(f6,c(0,0,0))
mm <- glm(seizure$y~seizure$trt + seizure$age ,offset = log(seizure$ltime),family=poisson)
mm
f6(MLE)[[1]]
solve(-f6(MLE)[[2]])
vcov(mm)
f6(MLE)[[3]]
logLik(mm)
knitr::opts_chunk$set(include = FALSE)
library(knitr)
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/acer/Desktop/R統計HW"))
setwd("C:/Users/acer/Desktop/R統計HW")
getwd()
knitr::opts_chunk$set(include = FALSE)
library(knitr)
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/acer/Desktop/R統計HW"))
setwd("C:/Users/acer/Desktop/R統計HW")
getwd()
seizure <- read.csv("seizure.csv")
knitr::opts_chunk$set(include = FALSE)
library(knitr)
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/acer/Desktop/R統計HW"))
setwd("C:/Users/acer/Desktop/R統計HW")
getwd()
seizure <- read.csv("seizure.csv")
knitr::opts_chunk$set(include = FALSE)
library(knitr)
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/acer/Desktop/R統計HW"))
setwd("C:/Users/acer/Desktop/R統計HW")
getwd()
seizure <- read.csv("seizure.csv")
newton <- function(f3, x0, tol = 1e-9, n.max = 100) {
x <- x0
f3.x <- f3(x)
n <- 0
while ((max(abs(f3.x[[1]])) > tol) & (n < n.max)) {
x <- x - solve(f3.x[[2]]) %*% f3.x[[1]]
f3.x <- f3(x)
n <- n + 1
}
if (n == n.max) {
cat('newton failed to converge\n')
} else {
return(x)
}
}
f6 <- function(betacoef) {
Y <- seizure$y
X <- cbind(rep(1,length(Y)),seizure$trt,seizure$age)
u <- exp(X %*% betacoef) * seizure$ltime
gradient <-  t(X) %*% (Y-u)
hessian <- -t(X) %*% diag(c(u),length(Y)) %*% X
logLikelihood <- sum(-u+Y*log(u)-log(factorial(Y)))
return(list(gradient, hessian, logLikelihood))
}
knitr::opts_chunk$set(include = FALSE)
library(knitr)
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/acer/Desktop/R統計HW"))
setwd("C:/Users/acer/Desktop/R統計HW")
getwd()
seizure <- read.csv("seizure.csv")
newton <- function(f3, x0, tol = 1e-9, n.max = 100) {
x <- x0
f3.x <- f3(x)
n <- 0
while ((max(abs(f3.x[[1]])) > tol) & (n < n.max)) {
x <- x - solve(f3.x[[2]]) %*% f3.x[[1]]
f3.x <- f3(x)
n <- n + 1
}
if (n == n.max) {
cat('newton failed to converge\n')
} else {
return(x)
}
}
f6 <- function(betacoef) {
Y <- seizure$y
X <- cbind(rep(1,length(Y)),seizure$trt,seizure$age)
u <- exp(X %*% betacoef) * seizure$ltime
gradient <-  t(X) %*% (Y-u)
hessian <- -t(X) %*% diag(c(u),length(Y)) %*% X
logLikelihood <- sum(-u+Y*log(u)-log(factorial(Y)))
return(list(gradient, hessian, logLikelihood))
}
newton(f6,c(0,0,0))
MLE <- newton(f6,c(0,0,0))
mm <- glm(seizure$y~seizure$trt + seizure$age ,offset = log(seizure$ltime),family=poisson)
mm
f6(MLE)[[1]]
solve(-f6(MLE)[[2]])
vcov(mm)
f6(MLE)[[3]]
logLik(mm)
library(knitr)
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/acer/Desktop/R統計HW"))
setwd("C:/Users/acer/Desktop/R統計HW")
getwd()
seizure <- read.csv("seizure.csv")
newton <- function(f3, x0, tol = 1e-9, n.max = 100) {
x <- x0
f3.x <- f3(x)
n <- 0
while ((max(abs(f3.x[[1]])) > tol) & (n < n.max)) {
x <- x - solve(f3.x[[2]]) %*% f3.x[[1]]
f3.x <- f3(x)
n <- n + 1
}
if (n == n.max) {
cat('newton failed to converge\n')
} else {
return(x)
}
}
f6 <- function(betacoef) {
Y <- seizure$y
X <- cbind(rep(1,length(Y)),seizure$trt,seizure$age)
u <- exp(X %*% betacoef) * seizure$ltime
gradient <-  t(X) %*% (Y-u)
hessian <- -t(X) %*% diag(c(u),length(Y)) %*% X
logLikelihood <- sum(-u+Y*log(u)-log(factorial(Y)))
return(list(gradient, hessian, logLikelihood))
}
newton(f6,c(0,0,0))
MLE <- newton(f6,c(0,0,0))
mm <- glm(seizure$y~seizure$trt + seizure$age ,offset = log(seizure$ltime),family=poisson)
mm
f6(MLE)[[1]]
solve(-f6(MLE)[[2]])
vcov(mm)
f6(MLE)[[3]]
logLik(mm)

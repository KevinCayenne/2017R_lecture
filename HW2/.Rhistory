}
for (i in c(3:21)){
table_name <- colnames(NTUAC.data)[i]
png(sprintf("%s-1.png", table_name), width = 1800, height = 700)
print(ggplot(NTUAC.data, aes(x = Session, y = NTUAC.data[,i], group = Task, colour = Task)) +
geom_line() +
geom_point(size=10) +
labs(
x = "Sessions",
y = "Accuracy"
) +
ggtitle(sprintf("%s-1", table_name)) +
theme(plot.title = element_text(hjust = 0.5, size= 30),
title = element_text(size=10),
legend.text = element_text(size=20),
legend.title = element_text(size=20),
axis.text = element_text(size=20),
axis.title = element_text(size=15,face="bold")))
dev.off()
png(sprintf("%s-2.png", table_name), width = 1800, height = 700)
print(ggplot(NTUAC.data, aes(x = Session, y = NTUAC.data[,i], group = Task, colour = NTUAC.data[,i+19])) +
geom_line() +
geom_point(aes(shape = Task),size = 10) +
geom_text(aes(label = NTUAC.data[,i]),hjust=0, vjust=2.5) +
labs(
x = "Sessions",
y = "Accuracy",
col= "Levels"
) +
ggtitle(sprintf("%s-2", table_name)) +
theme(plot.title = element_text(hjust = 0.5, size= 30),
title = element_text(size=10),
legend.text = element_text(size=20),
legend.title = element_text(size=20),
axis.text = element_text(size=20),
axis.title = element_text(size=15,face="bold")))
dev.off()
}
# item <- 1
# ggplot(NTUAC.data, aes(x = Session, y = NTUAC.data[,3], group = Task, colour = Task)) +
#         geom_line() +
#         geom_point(size=2) +
#
#         labs(title = sprintf("plot%d", item),
#              x = "Sessions",
#              y = "Accuracy"
#         ) +
#
#         theme(plot.title = element_text(hjust = 0.5),
#         title = element_text(size=15),
#         legend.text = element_text(size=15),
#         legend.title = element_text(size=15),
#         axis.text = element_text(size=13),
#         axis.title = element_text(size=13,face="bold"))
#
# ggplot(NTUAC.data, aes(x = Session, y = NTUAC.data[,3], group = Task, colour = NTUAC.data[,22])) +
#         geom_line() +
#         geom_point(aes(shape = Task),size = 10) +
#         geom_text(aes(label = NTUAC.data[,3]),hjust=0, vjust=2.5) +
#
#         labs(title = sprintf("plot%d-2", item),
#              x = "Sessions",
#              y = "Accuracy",
#              col= "Levels"
#         ) +
#
#         theme(plot.title = element_text(hjust = 0.5),
#               title = element_text(size=15),
#               legend.text = element_text(size=15),
#               legend.title = element_text(size=15),
#               axis.text = element_text(size=13),
#               axis.title = element_text(size=13,face="bold"))
NTUAC2.all <- read.csv('ALL_3_4_5梯V2.csv')
NTUAC2.data <- data.frame(NTUAC2.all)
NTUAC2.data$Session <- as.factor(NTUAC2.data$Session)
NTUAC2.data$Task <- as.factor(NTUAC2.data$Task)
NTUAC2.data$Subject <- as.factor(NTUAC2.data$Subject)
NTUAC2.data$Tag <- as.factor(NTUAC2.data$Tag)
Df.NB <- subset(NTUAC2.data, Task=="NB")
Df.I <- subset(NTUAC2.data, Task=="I")
Df.S <- subset(NTUAC2.data, Task=="S")
library(ggplot2)
library(ggsignif)
library(plotly)
# Boxplot
boxplot(NTUAC2.data$ACC ~ NTUAC2.data$Subject)
boxplot(NTUAC2.data$ACC ~ NTUAC2.data$Task )
boxplot(NTUAC2.data$ACC ~ NTUAC2.data$Task * NTUAC2.data$Subject)
# ggplot line
png(sprintf("The accuracy of each subjects_Nback task.png"), width = 1800, height = 700)
NB.sub <- ggplot(na.omit(Df.NB), aes(x=Session, y=ACC, group=interaction(Subject, Task), colour = Subject)) +
# geom_line() +
# geom_point(data = transform(na.omit(Df.NB), class = NULL), colour = "grey85", size = 4) +
geom_point() +
labs(title = "The accuracy of each subjects in n-back task") +
theme(plot.title = element_text(hjust = 0.5, size= 30),
title = element_text(size=10),
legend.text = element_text(size=20),
legend.title = element_text(size=20),
axis.text = element_text(size=20),
axis.title = element_text(size=20,face="bold")) +
facet_wrap(~Tag, ncol = 2, nrow = 4)
NB.sub
dev.off()
png(sprintf("The accuracy of each subjects_Inhibition task.png"), width = 1800, height = 700)
I.sub <- ggplot(na.omit(Df.I), aes(x=Session, y=ACC, group=interaction(Subject, Task), color = Subject)) +
geom_line() +
geom_point(size = 4) +
labs(title = "The accuracy of each subjects in Inhibition task") +
theme(plot.title = element_text(hjust = 0.5, size= 30),
title = element_text(size=10),
legend.text = element_text(size=20),
legend.title = element_text(size=20),
axis.text = element_text(size=20),
axis.title = element_text(size=20,face="bold")) +
facet_wrap(~Tag, ncol = 2, nrow = 4)
I.sub
dev.off()
png(sprintf("The accuracy of each subjects_Switching task.png"), width = 1800, height = 700)
S.sub <- ggplot(na.omit(Df.S), aes(x=Session, y=ACC, group=interaction(Subject, Task), color = Subject)) +
geom_line() +
geom_point(size = 4) +
labs(title = "The accuracy of each subjects in Switching task") +
theme(plot.title = element_text(hjust = 0.5, size= 30),
title = element_text(size=10),
legend.text = element_text(size=20),
legend.title = element_text(size=20),
axis.text = element_text(size=20),
axis.title = element_text(size=20,face="bold")) +
facet_wrap(~Tag, ncol = 2, nrow = 4)
S.sub
dev.off()
# ggplot Boxplot
png(sprintf("The accuracy of each subjects.png"), width = 1800, height = 700)
Sub.ACC <- ggplot(NTUAC2.data, aes(x=Subject, y=ACC)) +
geom_boxplot(aes(colour = Subject)) +
labs(title = "The accuracy of each subjects") +
theme(plot.title = element_text(hjust = 0.5, size= 30),
title = element_text(size=10),
legend.text = element_text(size=20),
legend.title = element_text(size=20),
axis.text = element_text(size=20),
axis.title = element_text(size=20,face="bold"))
Sub.ACC
dev.off()
png(sprintf("The accuracy of each task.png"), width = 1800, height = 700)
Task.ACC <- ggplot(NTUAC2.data, aes(x=Task, y=ACC)) +
geom_boxplot(aes(colour = Task)) +
labs(title = "The accuracy of each task") +
theme(plot.title = element_text(hjust = 0.5, size= 30),
title = element_text(size=10),
legend.text = element_text(size=20),
legend.title = element_text(size=20),
axis.text = element_text(size=20),
axis.title = element_text(size=20,face="bold"))
Task.ACC
dev.off()
png(sprintf("The accuracy of each level in each task.png"), width = 1800, height = 700)
Tag.ACC <- ggplot(NTUAC2.data, aes(x=Tag, y=ACC)) +
geom_boxplot(aes(colour = Task)) +
labs(title = "The accuracy of each level in each task") +
theme(plot.title = element_text(hjust = 0.5, size= 30),
title = element_text(size=10),
legend.text = element_text(size=20),
legend.title = element_text(size=20),
axis.text = element_text(size=20),
axis.title = element_text(size=20,face="bold"))
Tag.ACC
dev.off()
png(sprintf("The accuracy of each subject in each task.png"), width = 1800, height = 700)
SubACC.Task <- ggplot(NTUAC2.data, aes(Subject, ACC)) +
geom_boxplot(aes(colour = Task)) +
labs(title = "The accuracy of each subject in each task") +
theme(plot.title = element_text(hjust = 0.5, size= 30),
title = element_text(size=10),
legend.text = element_text(size=20),
legend.title = element_text(size=20),
axis.text = element_text(size=20),
axis.title = element_text(size=20,face="bold"))
print(SubACC.Task)
dev.off()
png(sprintf("The accuracy of each task in each subject.png"), width = 1800, height = 700)
TaskACC.Subject <- ggplot(NTUAC2.data, aes(Task, ACC)) +
geom_boxplot(aes(colour = Subject)) +
labs(title = "The accuracy of each task in each subject") +
theme(plot.title = element_text(hjust = 0.5, size= 30),
title = element_text(size=10),
legend.text = element_text(size=20),
legend.title = element_text(size=20),
axis.text = element_text(size=20),
axis.title = element_text(size=20,face="bold"))
print(TaskACC.Subject)
dev.off()
? geom_bar
dnorm(0.5)
pnorm(0.5)
curve(dnorm)
curve(dnorm,-5,5)
curve(pnorm,-5,5)
curve(dnorm,-5,5)
qnorm(0.05)
?dt
dt(-2.08,136)
curve
curve(qt)
curve(dt)
curve(dt,136)
curve(dt(136)
)
curve(dt(136)
)
curve(dt(136))
curve(dt(,136))
curve(dt(:,136))
curve(dt)
dt(-2.08,136)
dt(-2.08,136,lower.tail=F)
dt(-2.08,136,lower.tail="F")
dt(-2.08,136,lower.tail=FALSE)
dt(-2.08,136)
dt(2.45, 136)
curve(dt(2.45, 136))
plot(dt(2.45, 136))
plot(dt(136))
plot(dt
)
plot(dt)
plot(dt(2.45, 136))
curve(dt(2.45, 136))
?curve
curve(dnorm)
curve(tnorm)
curve(dchisq)
dnorm
dtnorm
dt
dt(,136)
dt(:,136)
dt(::,136)
dt(2.5,136)
rt(100,136)
curve(rt(100,136))
plot(rt(100,136))
plot(rt(1000,136))
plot(dt(rt(1000,136),136)
)
curve(dt(x,2,0.02), from=-5, to=6)
curve(dt(x,136), from=-5, to=6)
curve(dt(x,136), from=-5, to=5)
curve(pt(x,136), from=-5, to=5)
library(ggplot2)
dt(2.45, 136)
dt(-2.08, 136)
curve(dt(x,136), from=-5, to=5)
curve(pt(x,136), from=-5, to=5)
# 若觀察到的t檢定統計量為 -2.08 (雙尾檢定)，已知檢定統計量在H0之下服從t自由度為136的分布，試求其p-value?
dt(2.45, 136)
# 若觀察到的t檢定統計量為 2.45 時 (雙尾檢定)，其p-value為何?
dt(-2.08, 136)
# 請畫出此t分布的 pdf
curve(dt(x,136), from=-5, to=5)
# 請畫出此t分布的 cdf
curve(pt(x,136), from=-5, to=5)
# 若觀察到的t檢定統計量為 -2.08 (雙尾檢定)，已知檢定統計量在H0之下服從t自由度為136的分布，試求其p-value?
dt(2.45, 136)
# 若觀察到的t檢定統計量為 2.45 時 (雙尾檢定)，其p-value為何?
dt(-2.08, 136)
# 請畫出此t分布的 pdf
curve(dt(x,136), from=-5, to=5)
# 請畫出此t分布的 cdf
curve(pt(x,136), from=-5, to=5)
# 若觀察到的t檢定統計量為 -2.08 (雙尾檢定)，已知檢定統計量在H0之下服從t自由度為136的分布，試求其p-value?
dt(2.45, 136)
# 若觀察到的t檢定統計量為 2.45 時 (雙尾檢定)，其p-value為何?
dt(-2.08, 136)
pt(2.45, 136)
pt(-2.08, 136)
par(mfrow = c(3,2))
CLT <- function(n){
N <- 10000
score <- rnorm(N,75,5)
hist(score, xlim=c(50,100), breaks=seq(50,100,1))
mean.score <- c()
for(i in 1:1000){
mean.score[i] <- mean(score[sample(1:N, size=n)])
}
hist(mean.score, xlim=c(50,100), breaks=seq(50,100,1))
return( c(mean(mean.score), var(mean.score)) )
}
CLT(n=5)
CLT(n=10)
CLT(n=20)
25/5
25/10
25/20
# 若觀察到的t檢定統計量為 -2.08 (雙尾檢定)，已知檢定統計量在H0之下服從t自由度為136的分布，試求其p-value?
dt(2.45, 136)
pt(2.45, 136)
# 若觀察到的t檢定統計量為 2.45 時 (雙尾檢定)，其p-value為何?
dt(-2.08, 136)
pt(-2.08, 136)
# 請畫出此t分布的 pdf
curve(dt(x,136), from=-5, to=5)
# 請畫出此t分布的 cdf
curve(pt(x,136), from=-5, to=5)
dt(2.45, 136)
pt(2.45, 136)
# 若觀察到的t檢定統計量為 2.45 時 (雙尾檢定)，其p-value為何?
dt(-2.08, 136)
pt(-2.08, 136)
dt(2.45, 136)
pt(2.45, 136)
# 若觀察到的t檢定統計量為 2.45 時 (雙尾檢定)，其p-value為何?
dt(-2.08, 136)
pt(-2.08, 136)
par(mfrow = c(3,2))
CLT <- function(n){
N <- 10000
score <- rchisq(N,75,5)
hist(score, xlim=c(50,100), breaks=seq(50,100,1))
mean.score <- c()
for(i in 1:1000){
mean.score[i] <- mean(score[sample(1:N, size=n)])
}
hist(mean.score, xlim=c(50,100), breaks=seq(50,100,1))
return( c(mean(mean.score), var(mean.score)) )
}
CLT(10)
par(mfrow = c(3,2))
CLT <- function(n){
N <- 10000
score <- rchisq(N,75,5)
hist(score, xlim=c(50,100))
mean.score <- c()
for(i in 1:1000){
mean.score[i] <- mean(score[sample(1:N, size=n)])
}
hist(mean.score, xlim=c(50,100))
return( c(mean(mean.score), var(mean.score)) )
}
CLT(10)
par(mfrow = c(3,2))
CLT <- function(n){
N <- 10000
score <- rchisq(N,75,5)
hist(score, xlim=c(50,100))
mean.score <- c()
for(i in 1:1000){
mean.score[i] <- mean(score[sample(1:N, size=n)])
}
hist(mean.score, xlim=c(50,100))
return( c(mean(mean.score), var(mean.score)) )
}
CLT(20)
CLT(40)
CLT(100)
par(mfrow = c(3,2))
CLT <- function(n){
N <- 10000
score <- rchisq(N,75,5)
hist(score, xlim=c(50,150))
mean.score <- c()
for(i in 1:1000){
mean.score[i] <- mean(score[sample(1:N, size=n)])
}
hist(mean.score, xlim=c(50,100))
return( c(mean(mean.score), var(mean.score)) )
}
CLT(10)
par(mfrow = c(3,2))
CLT <- function(n){
N <- 10000
score <- rchisq(N,75,5)
hist(score, xlim=c(40,150))
mean.score <- c()
for(i in 1:1000){
mean.score[i] <- mean(score[sample(1:N, size=n)])
}
hist(mean.score, xlim=c(50,100))
return( c(mean(mean.score), var(mean.score)) )
}
CLT(10)
par(mfrow = c(3,2))
CLT <- function(n){
N <- 10000
score <- rchisq(N,1)
hist(score, xlim=c(40,150))
mean.score <- c()
for(i in 1:1000){
mean.score[i] <- mean(score[sample(1:N, size=n)])
}
hist(mean.score, xlim=c(50,100))
return( c(mean(mean.score), var(mean.score)) )
}
CLT(10)
CLT(100)
par(mfrow = c(3,2))
CLT <- function(n){
N <- 10000
score <- rchisq(N,1)
hist(score)
mean.score <- c()
for(i in 1:1000){
mean.score[i] <- mean(score[sample(1:N, size=n)])
}
hist(mean.score)
return( c(mean(mean.score), var(mean.score)) )
}
CLT(10)
CLT(100)
CLT(1000)
CLT(10000)
CLT(5000)
CLT(1000)
CLT(10)
par(mfrow = c(3,2))
CLT <- function(n){
N <- 10000
score <- rchisq(N,1)
hist(score)
mean.score <- c()
for(i in 1:1000){
mean.score[i] <- mean(score[sample(1:N, size=n)])
}
hist(mean.score)
return( c(mean(mean.score), var(mean.score)) )
}
CLT(10)
CLT(5)
CLT(20)
CLT(5)
CLT(10)
CLT(15)
CLT(20)
CLT(100)
CLT(1000)
CLT(5)
CLT(50)
CLT(100)
setwd('C:/Users/acer/Desktop/R統計HW/HW2')
table <- read.csv("seizure.csv")
table
table$y
y <- table$y
y
x <- table$ltime
x
y*x
sum(y*x)
length(x)
length(y)
x^2
mean(x)
regtry <- function(y, x){
b.one <- (sum(y*x)-(sum(x)*sum(y)/length(x)))/(sum(x^2)-(sum(x)^2/length(x)))
b.zero <- mean(y) - b.one*mean(x)
}
regtry(table$y,table$ltime)
b.one
regtry <- function(y, x){
b.one <- (sum(y*x)-(sum(x)*sum(y)/length(x)))/(sum(x^2)-(sum(x)^2/length(x)))
b.zero <- mean(y) - b.one*mean(x)
return(c(b.one,b.zero)
}
regtry <- function(y, x){
b.one <- (sum(y*x)-(sum(x)*sum(y)/length(x)))/(sum(x^2)-(sum(x)^2/length(x)))
b.zero <- mean(y) - b.one*mean(x)
return(c(b.one,b.zero))
}
setwd('C:/Users/acer/Desktop/R統計HW/HW2')
table <- read.csv("seizure.csv")
regtry <- function(y, x){
b.one <- (sum(y*x)-(sum(x)*sum(y)/length(x)))/(sum(x^2)-(sum(x)^2/length(x)))
b.zero <- mean(y) - b.one*mean(x)
return(c(b.one,b.zero))
}
regtry(table$y,table$ltime)
lm(table$y ~ table$ltime)
regtry <- function(y, x){
b.one <- (sum(y*x)-(sum(x)*sum(y)/length(x)))/(sum(x^2)-(sum(x)^2/length(x)))
b.zero <- mean(y) - b.one*mean(x)
return(c(b.zero, b.one))
}
regtry(table$y,table$ltime)
regtry <- function(y, x){
b.one <- (sum(y*x)-(sum(x)*sum(y)/length(x)))/(sum(x^2)-(sum(x)^2/length(x)))
b.zero <- mean(y) - b.one*mean(x)
result <- list("Intercept" = foo, "B1" = bar)
return(result)
}
regtry(table$y,table$ltime)
regtry <- function(y, x){
b.one <- (sum(y*x)-(sum(x)*sum(y)/length(x)))/(sum(x^2)-(sum(x)^2/length(x)))
b.zero <- mean(y) - b.one*mean(x)
result <- list("Intercept" = b.zero, "B1" = b.one)
return(result)
}
regtry(table$y,table$ltime)
regtry <- function(y, x){
b.one <- (sum(y*x)-(sum(x)*sum(y)/length(x)))/(sum(x^2)-(sum(x)^2/length(x)))
b.zero <- mean(y) - b.one*mean(x)
result <- data.frame("Intercept" = b.zero, "B1" = b.one)
return(result)
}
regtry(table$y,table$ltime)
regtry <- function(y, x){
b.one <- (sum(y*x)-(sum(x)*sum(y)/length(x)))/(sum(x^2)-(sum(x)^2/length(x)))
b.zero <- mean(y) - b.one*mean(x)
result <- data.frame("Intercept" = b.zero, "b1" = b.one)
return(result)
}
regtry(table$y,table$ltime)
